pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
-- initialize game state
function _init()
    
    load_map()
    player = {x = 8, y = 8, dx = 0, dy = 0, score = 0, on_ground = false}
    gravity = 0.2
    jump_strength = -2.5
    move_speed = 1
    treasures = {{x = 40, y = 40}, {x = 80, y = 24}}
    enemies = {{x = 64, y = 64, dir = 1}}
    exit = {x = 120, y = 120}
end


function _update()
    
    player.dy += gravity
    player.on_ground = false
    
    -- player movement
    if btn(0) then player.dx = -move_speed end -- left
    if btn(1) then player.dx = move_speed end -- right
    if not btn(0) and not btn(1) then player.dx = 0 end -- no horizontal movement

    -- horizontal collision detection
    player.x += player.dx
    if is_wall(player.x, player.y) or is_wall(player.x + 7, player.y) or is_wall(player.x, player.y + 7) or is_wall(player.x + 7, player.y + 7) then
        player.x -= player.dx
    end

    -- vertical collision detection
    player.y += player.dy
    if is_wall(player.x, player.y + 7) or is_wall(player.x + 7, player.y + 7) then
        player.y -= player.dy
        player.dy = 0
        player.on_ground = true
    end

    
    if player.on_ground and btnp(5) then -- button 5 is usually the space bar
        player.dy = jump_strength
        player.on_ground = false
    end
    
    
    for i = #treasures, 1, -1 do
        local t = treasures[i]
        if abs(player.x - t.x) < 8 and abs(player.y - t.y) < 8 then
            del(treasures, t)
            player.score += 10
        end
    end
    
    -- enemy movement
    for e in all(enemies) do
        
        e.x += e.dir
        if e.x < 8 or e.x > 120 then e.dir = -e.dir end
        -- check collision with player
        if abs(player.x - e.x) < 8 and abs(player.y - e.y) < 8 then
            --game over or player damage
            _init() -- restart game for simplicity
        end
    end
    
    
    if #treasures == 0 and abs(player.x - exit.x) < 8 and abs(player.y - exit.y) < 8 then
        -- level complete (for simplicity, just restart)
        _init()
    end
end

-- draw game state
function _draw()
    cls()
    
    draw_map()
    
    spr(1, player.x, player.y)
    
    for t in all(treasures) do
        spr(2, t.x, t.y)
    end
    
    for e in all(enemies) do
        spr(3, e.x, e.y)
    end
end


function load_map()
   
end


function is_wall(x, y)
    local tile_x = flr(x / 8)
    local tile_y = flr(y / 8)
    local tile = mget(tile_x, tile_y)
    return tile == 16
end

function draw_map()
    map(0, 0, 0, 0, 16, 16)
end

__gfx__
00000000300303030000000000000000000f00007777777700000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000333333330066000000600000ffffffff7677777700000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700003ff3000066066000600660f00000ff7777677700000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000333ff3330066060000666600f000000f7777777700000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000330bb0300066660000066000ffffffff7777767700000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000bb000000666000066660000ff00007777777700000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000bb0000000000006600660000ff0007767777700000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000ffff000000000006000066ffffffff7777777700000000000000000000000000000000000000000000000000000000000000000000000000000000
ffff4fff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
f77f777f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4ff6fff6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
f77777ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ff4fff4f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6f77777f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ffff4f6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
f646fff4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050505051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050505051010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050505051010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050505051010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050505051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010050505050505051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050505051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050505051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050505051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050505051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050510101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050505051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050505051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050505051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
