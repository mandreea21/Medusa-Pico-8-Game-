pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
function _init()
    load_map()
    player = {x = 10, y = 100, dx = 0, dy = 0, score = 0, on_ground = false}
    gravity = 0.2
    jump_strength = -3
    move_speed = 1
    bullet_speed = 2
    bullets = {}
    treasures = {{x = 40, y = 40}, {x = 80, y = 24}}
    enemies = {{x = 50, y = 102, dir = 1}}
    exit = {x = 120, y = 120}
    enemframe = 10
    fly = 1
    stones = {}
end

function _update()
    player.dy += gravity
    player.on_ground = false
    
    -- player movement
    if btn(0) then player.dx = -move_speed end -- left
    if btn(1) then player.dx = move_speed end -- right
    if not btn(0) and not btn(1) then player.dx = 0 end -- no horizontal movement

    -- horizontal collision detection
    player.x += player.dx
    if check_collision(player.x, player.y, player.dx, 0) then
        player.x -= player.dx
    end

    -- vertical collision detection
    player.y += player.dy
    if check_collision(player.x, player.y, 0, player.dy) then
        player.y -= player.dy
        player.dy = 0
        player.on_ground = true
    end

    -- jumping
    if player.on_ground and btnp(5) then -- button 5 is usually the space bar
        player.dy = jump_strength
        player.on_ground = false
    end
    
    -- shooting bullets
    if btnp(4) then 
        spawn_bullet(player.x + 4, player.y + 4, 1) 
    end
    
    -- update bullets
    for bullet in all(bullets) do
        bullet.x += bullet.dx
        bullet.y += bullet.dy
        
        -- check for collision with enemies
        for enemy in all(enemies) do
            if abs(bullet.x - enemy.x) < 8 and abs(bullet.y - enemy.y) < 8 then
                -- mark bullet for removal
                bullet.remove = true
                player.score += 50
                
                spawn_stone(enemy.x, enemy.y)
                spawn_enemy(enemy.x, enemy.y - 8, 1)
                enemy.remove = true
                del(enemies, enemy)
                
                break
            end
        end
    end

    -- remove bullets marked for removal
    for i = #bullets, 1, -1 do
        if bullets[i].remove then
            del(bullets, bullets[i])
        end
    end
    
    -- update enemies
    for enemy in all(enemies) do
        enemy.x += enemy.dir
        if enemy.x < 40 or enemy.x > 80 then enemy.dir = -enemy.dir end
       
        if abs(player.x - enemy.x) < 8 and abs(player.y - enemy.y) < 8 then
            _init() 
        end
    end
    
    -- check if all treasures collected and player reached exit
    if #treasures == 0 and abs(player.x - exit.x) < 8 and abs(player.y - exit.y) < 8 then
        
        _init()
    end
end

function _draw()
    cls()
    draw_map()
   
    spr(1, player.x, player.y)
   
    for t in all(treasures) do
        spr(2, t.x, t.y)
    end
    
    for e in all(enemies) do
        if fly == 1 then
            if enemframe == 12 then
                fly = 0
            end
            enemframe += 1
        elseif fly == 0 then
            if enemframe == 11 then
                fly = 1
            end
            enemframe -= 1
        end
        spr(enemframe, e.x, e.y)
    end
    
    for bullet in all(bullets) do
        local sprite_attack = 6 + rnd(4)
        spr(sprite_attack, bullet.x, bullet.y)
    end
    
    for stone in all(stones) do
        spr(20, stone.x, stone.y)
    end
    
    -- display the score
    print("score: " .. player.score, 1, 1, 7) -- display score at the top-left corner in color 7 (white)
end

function load_map()
    map(0, 0, 0, 0, 16, 16)
end

function is_wall(x, y)
    local tile_x = flr(x / 8)
    local tile_y = flr(y / 8)
    local tile = mget(tile_x, tile_y)
    return tile == 16 or tile == 20
end

function is_stone(x, y)
    for stone in all(stones) do
        if abs(stone.x - x) < 8 and abs(stone.y - y) < 8 then
            return true
        end
    end
    return false
end

function check_collision(x, y, dx, dy)
    
    if is_wall(x + dx, y + dy) or is_wall(x + 7 + dx, y + dy) or is_wall(x + dx, y + 7 + dy) or is_wall(x + 7 + dx, y + 7 + dy) then
        return true
    end
    
    if dy > 0 then
        if is_stone(x + dx, y + dy) or is_stone(x + 7 + dx, y + dy) then
            return true
        end
    end
    return false
end

function spawn_bullet(x, y, direction)
    local bullet = {
        x = x,
        y = y,
        dx = bullet_speed * direction,
        dy = 0,
        remove = false
    }
    add(bullets, bullet)
end

function spawn_stone(x, y)
    local stone = {
        x = x,
        y = y,
        dx = 0,
        dy = 0,
        remove = false
    }
    add(stones, stone)
end

function spawn_enemy(x, y, direction)
    local enemy = {
        x = x,
        y = y,
        dir = direction,
        dx = 0,
        dy = 0,
        remove = false
    }
    add(enemies, enemy)
end

function draw_map()
    map(0, 0, 0, 0, 16, 16)
end

__gfx__
00000000300303030000000000000005666666466666665600000000000000000033300000000000000007700000000000000000000000000000000000000000
000000003333333300aa000005a50555000666446566556600000000003330003330333000000000000055700000077000000000000000000000000000000000
00700700003ff30000aa0aa00a555555440444006666666600000338093033003300003300000338000555000000557000000000000000000000000000000000
00077000333ff30300aa0a00055555006604550666666566933033b3a90003303000033b930003b3515555555155555551555555515555550000000000000000
00077000300bb33300aaaa00005555006664006666655666a033333300000330300003b8a3300333955555009555550095555570955555000000000000000000
00700700000bb000000aaa0005555550666406666666566600333000000000333399000000333330055600000556000005565770055655700000000000000000
00000000000bb00000000000555005506644066666666666000000000000033b000a000000000000000000000000000000000000000057700000000000000000
0000000000ffff000000000055500000444444446666666600000000000003b80000000000000000000000000000000000000000000000000000000000000000
00404444464066640000000000000000aa0000aa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55450564440544440000000000000000affffffa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00444044450646640000000000000000af4f4f4a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
46006044006646640000000000000000a444444a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
46406004444444440000000000000000aa4444aa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
60066444466664640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
40444444466664440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
46406664444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000006664f4ffff4f4666ffffffffffffffff6664f4ffff4f4666000000000000000000000000000000000000000000000000000000000000000000000000
000000006664f4ffff4f4666f66666666666666f6664f4ffff4f4666000000000000000000000000000000000000000000000000000000000000000000000000
000000006664f4ffff4f466664444444444444466664f4ffff4f4666000000000000000000000000000000000000000000000000000000000000000000000000
000000006664f4ffff4f46664a64f4ffff4f46a4aa64f4ffff4f46aa000000000000000000000000000000000000000000000000000000000000000000000000
000000006664f4ffff4f4666a664f4ffff4f466aaffffffffffffffa000000000000000000000000000000000000000000000000000000000000000000000000
000000006664f4ffff4f46666664f4ffff4f4666a44444444444444a000000000000000000000000000000000000000000000000000000000000000000000000
000000006664f4ffff4f46666664f4ffff4f46666666666666666666000000000000000000000000000000000000000000000000000000000000000000000000
000000006664f4ffff4f46666664f4ffff4f4666ffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1005050505050505050505050511101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050511111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050543441010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050541421010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050541421010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005050505050505050505050541421000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500
1110101010101010050505050541421000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500
1011111111111111050505050541421000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500
1043440505434405050505050541421000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500
1041420505414205050505050541421000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500
1041420505414205050505050545461000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500
1041420505414205050505101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500
1041420505414205050505434405111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1041420505414205050505414205051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1045460505454605050505454605051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
